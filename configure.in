dnl Process this file with autoconf to produce a configure script.

AC_INIT(phred, 0.1.0)
dnl Every other copy of the package version number gets its value from here
AM_INIT_AUTOMAKE(phred, 0.1.0)

AM_MAINTAINER_MODE

dnl create a config.h file (Automake will add -DHAVE_CONFIG_H)
AM_CONFIG_HEADER(src/config.h)

AC_SUBST(VERSION)

ISODATE=`date +%Y-%m-%d`
AC_SUBST(ISODATE)

AC_CANONICAL_HOST

dnl options
WANT_DEBUG=
AC_ARG_ENABLE(debug, [  --enable-debug          Enable debugging messages, turn on assertions
                          and array bounds checking ], WANT_DEBUG=1)

AC_ARG_WITH(cxx, AC_HELP_STRING([--with-cxx=CXX], [c++ compiler to use]), 
		 [CXX="$withval"])

# Stolen in part from the LAM MPI configure.in file
if test "$with_cxx" = yes; then
   AC_MSG_ERROR(--with-cxx requires the compiler name)
fi

dnl Checks for programs.
AC_LANG(C++)

AC_PROG_INSTALL
AC_PROG_CC
AC_PROC_CXX
AC_PROC_CXXCPP
AM_PROG_LEX
AC_PROG_YACC

# Various MPI implementations we can use
AC_ARG_WITH(MPILAM, [  --with-lammpi           Use LAM/MPI for message passing])
AC_ARG_WITH(MPILAM_libs, [  --with-lammpi-libs      Location of LAM/MPI libraries])
AC_ARG_WITH(MPILAM_includes, [  --with-lammpi-includes  Location of LAM/MPI include files])

AC_ARG_WITH(MPICH, [  --with-mpich            Use MPICH for message passing])
AC_ARG_WITH(MPICH_libs, [  --with-mpich-libs       Location of MPICH libraries])
AC_ARG_WITH(MPICH_includes, [  --with-mpich-includes   Location of MPICH include files])

AC_ARG_WITH(IBMPE, [  --with-ibmpe            Use IBM Parallel Environment for message passing])
AC_ARG_WITH(IBMPE_libs, [  --with-ibmpe-libs       Location of IBM/PE libraries])
AC_ARG_WITH(IBMPE_includes, [  --with-ibmpe-includes   Location of IBM/PE include files])

dnl Obviously "there can be only one" MPI library
if [[ ! -z "$with_MPILAM" ]] || [[ ! -z "$with_MPILAM_libs" ]] || [[ ! -z "$with_MPILAM_includes" ]]; then

        if [[ ! -z "$with_MPICH" ]] || [[ ! -z "$with_MPICH_libs" ]] || [[ ! -z "$with_MPICH_includes" ! -z "$with_IBMPE" ]] || [[ ! -z "$with_IBMPE_libs" ]] || [[ ! -z "$with_IBMPE_includes" ]]; then
                AC_MSG_ERROR(There can be only one MPI libary.)
        fi
fi

if [[ ! -z "$with_MPICH" ]] || [[ ! -z "$with_MPICH_libs" ]] || [[ ! -z "$with_MPICH_includes" ]]; then

        if [[ ! -z "$with_MPILAM" ]] || [[ ! -z "$with_MPILAM_libs" ]] || [[ ! -z "$with_MPILAM_includes" ! -z "$with_IBMPE" ]] || [[ ! -z "$with_IBMPE_libs" ]] || [[ ! -z "$with_IBMPE_includes" ]]; then
                AC_MSG_ERROR(There can be only one MPI libary.)
        fi
fi

if [[ ! -z "$with_IBMPE" ]] || [[ ! -z "$with_IBMPE_libs" ]] || [[ ! -z "$with_IBMPE_includes" ]]; then

        if [[ ! -z "$with_MPILAM" ]] || [[ ! -z "$with_MPILAM_libs" ]] || [[ ! -z "$with_MPILAM_includes" ! -z "$with_MPICH" ]] || [[ ! -z "$with_MPICH_libs" ]] || [[ ! -z "$with_MPICH_includes" ]]; then
                AC_MSG_ERROR(There can be only one MPI libary.)
        fi
fi

dnl But there must be an MPI library
if [[ -z "$with_MPILAM" ]] && [[ -z "$with_MPILAM_libs" ]] && [[ -z "$with_MPILAM_includes" ]] && [[ -z "$with_IBMPE" ]] && [[ -z "$with_IBMPE_libs" ]] && [[ -z "$with_IBMPE_includes" ]] && [[ -z "$with_MPICH" ]] && [[ -z "$with_MPICH_libs" ]] && [[ -z "$with_MPICH_includes" ]]; then
   AC_MSG_ERROR([An MPI library must be specified. Use one of --with-mpich, 
--with-lammpi, or --with-ibmpe.])
fi

dnl Debug?
if test "x$WANT_DEBUG" = "x1"; then
        AC_DEFINE([DEBUG], [1], [Turn on debugging messages])
        CXXFLAGS="$CFLAGS -g"
else
        AC_DEFINE([NDEBUG], [1], [Turn off assertions])
        CXXFLAGS="$CFLAGS -O2"
fi


dnl Checks for libraries.
if [[ ! -z "$with_IBMPE" ]] || [[ ! -z "$with_IBMPE_libs" ]] || [[ ! -z "$with_IBMPE_includes" ]]; then
        IBMPE_LIBS=""
        IBMPE_INCLUDES=""
        if [[ ! -z "$with_IBMPE_libs" ]]; then
                IBMPE_LIBS="$with_IBMPE_libs"
        fi
        if [[ ! -z "$with_IBMPE_includes" ]]; then
                IBMPE_INCLUDES="$with_IBMPE_includes"
        fi

        AC_CHECK_LIB(mpi, MPI_Init, [LDADD="$LDADD -lmpi"], [
            AC_MSG_ERROR(*** Can't find the IBM PE MPI libraries.)],
            [-L$IBMPE_LIBS])

        AC_CHECK_HEADER(mpi.h, [], [AC_MSG_ERROR([*** Can't find the IBM PE MPI header files])], [-I$IBMPE_INCLUDES])

fi

if [[ ! -z "$with_MPICH" ]] || [[ ! -z "$with_MPICH_libs" ]] || [[ ! -z "$with_MPICH_includes" ]]; then
        MPICH_LIBS=""
        MPICH_INCLUDES=""
        if [[ ! -z "$with_MPICH_libs" ]]; then
                MPICH_LIBS="$with_MPICH_libs"
        fi
        if [[ ! -z "$with_MPICH_includes" ]]; then
                MPICH_INCLUDES="$with_MPICH_includes"
        fi

        AC_CHECK_LIB(mpi, MPI_Init, [LDADD="$LDADD -lmpi"], [
            AC_MSG_ERROR(*** Can't find the MPICH libraries.)],
            [-L$MPICH_LIBS])

        AC_CHECK_HEADER(mpi.h, [], [AC_MSG_ERROR([*** Can't find the MPICH header files])], [-I$MPICH_INCLUDES])

fi

if [[ ! -z "$with_MPILAM" ]] || [[ ! -z "$with_MPILAM_libs" ]] || [[ ! -z "$with_MPILAM_includes" ]]; then
        MPILAM_LIBS=""
        MPILAM_INCLUDES=""
        if [[ ! -z "$with_MPILAM_libs" ]]; then
                MPILAM_LIBS="$with_MPILAM_libs"
        fi
        if [[ ! -z "$with_MPILAM_includes" ]]; then
                MPILAM_INCLUDES="$with_MPILAM_includes"
        fi

        AC_CHECK_LIB(mpi, MPI_Init, [LDADD="$LDADD -lmpi"], [
            AC_MSG_ERROR(*** Can't find the LAM/MPI libraries.)],
            [-L$MPILAM_LIBS])

        AC_CHECK_HEADER(mpi.h, [], [AC_MSG_ERROR([*** Can't find the LAM/MPI header files])], [-I$MPILAM_INCLUDES])

fi

AC_CHECK_LIB(popt, poptGetContext, LDADD="$LDADD -lpopt", [
    AC_MSG_ERROR(*** Cannot find the popt library); exit])

AC_CHECK_HEADER([popt.h], [], [AC_MSG_ERROR([*** popt headers required.])])

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h sys/param.h sys/time.h time.h sys/mkdev.h sys/sysmacros.h string.h memory.h fcntl.h dirent.h sys/ndir.h ndir.h alloca.h locale.h )


jm_CHECK_TYPE_STRUCT_UTIMBUF
AC_HEADER_MAJOR
AC_FUNC_ALLOCA
AC_STRUCT_TM
AC_STRUCT_ST_BLOCKS
AC_FUNC_CLOSEDIR_VOID
AC_CHECK_FUNCS(mkfifo)
AC_CHECK_FUNC(mknod)

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.

AC_SUBST(CFLAGS, $CFLAGS)
AC_SUBST(CXXFLAGS, $CXXFLAGS)

AC_OUTPUT(Makefile src/Makefile doc/Makefile doc/phred.lsm phred.spec)
